_G.auto = true

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player, mouse = Players.LocalPlayer, Players.LocalPlayer:GetMouse()

-- Chiêu theo từng trái
local skills = {
    DoughV2 = {"GrilledLance", "ElasticLasso", "Oblivion", "PowerDough", "BlazingStorm", "ScorchingBuzzcut"},
    Ope = {"Room", "Takt", "Wreckage", "HurricaneShock", "GammaKnife", "Mes", "Shambles"},
    LeopardV2 = {"FingerPistolBarrage", "SonicKick", "InfinityDrive", "UnrelentingAssault", "Transform", "HeavensDemise"},
    Lightning = {"VoltageUp", "LightningPalm", "CrashingThunder", "ProjectedBurst", "CrushingJudgment", "Raigo"},
    Nika = {"RocGun", "NeoRedHawk", "RocGatling", "RedRoc", "DrumsOfLiberation", "Gear5", "SpinningTop", "DawnRocket", "MolePistolCombo", "RisingBolt", "GigantStamp", "BajrangGun"},
    DragonV2 = {"InfernoBreath", "ThunderBagua", "DragonTwister", "BeastsBellow", "Transform", "BoloFrenzy", "FlamingTorch", "Demolition", "Transformation"},
    Soul = {"EnthralGrasp", "ScorchingSickle", "ZeusMeadow", "CrimsonPillar", "Transform", "MaserCannon"},
    DarkXQuake = {"AntiQuake", "BlackHolePath", "BlackTurret", "NeoKurouzuCombo", "AntiBody", "QuadraSeaQuake"},
    Okuchi = {"PrimalRage", "ArcticBreath", "DevastatingDrop", "HallowedCuts", "GlacialCoat", "DivineSerpent"},
}

-- Chiêu đặc biệt cần MouseRay
local special = {
    BlackHolePath = true,
    Room = true,
    Shambles = true,
    GrilledLance = true,
    ScorchingBuzzcut = true,
    InfernoBreath = true,
    ArcticBreath = true,
}

-- Biến toàn cục để cập nhật trái hiện tại
local currentFruit = nil

local function updateCurrentFruit()
    local mainData = player:FindFirstChild("MAIN_DATA")
    if not mainData then return end

    local currentSlot = mainData:FindFirstChild("Slot")
    if not currentSlot then return end

    local slotValue = mainData.Slots:FindFirstChild(tostring(currentSlot.Value))
    currentFruit = slotValue and slotValue.Value or nil
end

-- Theo dõi thay đổi slot
local function watchSlotChanges()
    local mainData = player:WaitForChild("MAIN_DATA", 10)
    if not mainData then
        warn("Không tìm thấy MAIN_DATA.")
        return
    end

    local slot = mainData:WaitForChild("Slot", 5)
    if not slot then
        warn("Không tìm thấy Slot.")
        return
    end

    slot:GetPropertyChangedSignal("Value"):Connect(function()
        updateCurrentFruit()
    end)

    updateCurrentFruit()
end

-- Gọi kỹ năng
local function castSkill(fruit, skill)
    local char = player.Character or player.CharacterAdded:Wait()
    local hrp = char:WaitForChild("HumanoidRootPart")

    if special[skill] then
        local origin, target = hrp.Position, mouse.Hit.Position
        local dir = (target - origin).Unit * 45
        local ray = {
            Normal = Vector3.yAxis,
            Direction = dir,
            Origin = origin,
            Instance = workspace.Map.Part,
            Distance = (target - origin).Magnitude,
            Material = Enum.Material.Grass,
            Position = target
        }

        ReplicatedStorage.Replicator:InvokeServer(fruit, skill, {Ground = {Position = target}, MouseRay = ray})
        ReplicatedStorage.ReplicatorNoYield:FireServer("ClientData", "UpdateData", {RootCF = hrp.CFrame, MouseRay = ray})
    else
        ReplicatedStorage.ReplicatorNoYield:FireServer(fruit, skill, {})
    end
end

-- Bắt đầu theo dõi và dùng chiêu
task.spawn(watchSlotChanges)

task.spawn(function()
    while _G.auto do
        if currentFruit and skills[currentFruit] then
            for _, skill in ipairs(skills[currentFruit]) do
                castSkill(currentFruit, skill)
                task.wait(0.15)
            end
        else
            warn("Chưa có trái hoặc trái không có trong danh sách.")
            task.wait(1)
        end
    end
end)
