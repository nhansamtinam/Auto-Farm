local decalsyeeted = true
local g = game
local w = g.Workspace
local l = g.Lighting
local t = w.Terrain
local Players = g:GetService("Players")
local RunService = g:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

t.WaterWaveSize = 0
t.WaterWaveSpeed = 0
t.WaterReflectance = 0
t.WaterTransparency = 0

l.GlobalShadows = false
l.FogEnd = 9e9
l.Brightness = 0

pcall(function()
    settings().Rendering.QualityLevel = Enum.QualityLevel.Level01
end)

local function optimizePart(v)
    if (v:IsA("BasePart") or v:IsA("Part")) and not v:IsA("MeshPart") then
        v.Material = Enum.Material.Plastic
        v.Reflectance = 0
    elseif (v:IsA("Decal") or v:IsA("Texture")) and decalsyeeted then
        v.Transparency = 1
    elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
        v.Lifetime = NumberRange.new(0)
    elseif v:IsA("Explosion") then
        v.BlastPressure = 1
        v.BlastRadius = 1
    elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
        v.Enabled = false
    elseif v:IsA("MeshPart") and decalsyeeted then
        v.Material = Enum.Material.Plastic
        v.Reflectance = 0
        v.TextureID = "rbxassetid://0"
        v.Color = Color3.fromRGB(0, 0, 0)
    elseif v:IsA("SpecialMesh") and decalsyeeted then
        v.TextureId = ""
    elseif v:IsA("ShirtGraphic") and decalsyeeted then
        v.Graphic = ""
    elseif (v:IsA("Shirt") or v:IsA("Pants")) and decalsyeeted then
        local prop = v.ClassName .. "Template"
        if v[prop] ~= nil then
            v[prop] = ""
        end
    end
end

for _, v in pairs(w:GetDescendants()) do
    optimizePart(v)
end

local function optimizeLightingEffect(effect)
    if effect:IsA("SunRaysEffect") or effect:IsA("ColorCorrectionEffect") or effect:IsA("BloomEffect") or effect:IsA("DepthOfFieldEffect") then
        effect.Enabled = false
    end
end

for _, effect in pairs(l:GetChildren()) do
    optimizeLightingEffect(effect)
end

l.ChildAdded:Connect(optimizeLightingEffect)
w.DescendantAdded:Connect(function(v)
    task.wait()
    optimizePart(v)
end)

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FPSGui"
screenGui.ResetOnSpawn = false
screenGui.DisplayOrder = 100
screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local textLabel = Instance.new("TextLabel")
textLabel.Parent = screenGui
textLabel.Size = UDim2.new(0, 300, 0, 50)
textLabel.Position = UDim2.new(0, 10, 0, 10)
textLabel.Font = Enum.Font.FredokaOne
textLabel.TextScaled = true
textLabel.BackgroundTransparency = 1
textLabel.TextStrokeTransparency = 0

local hue = 0
local frameCount = 0
local lastUpdate = tick()

RunService.RenderStepped:Connect(function()
    hue = hue + 0.005
    if hue > 1 then hue = 0 end
    textLabel.TextColor3 = Color3.fromHSV(hue, 1, 1)
    frameCount = frameCount + 1
    local now = tick()
    if now - lastUpdate >= 1 then
        local fps = frameCount / (now - lastUpdate)
        frameCount = 0
        lastUpdate = now
        textLabel.Text = string.format("%s | FPS: %d", LocalPlayer.Name, math.floor(fps))
    end
end)

local Players = game:GetService("Players")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local player = Players.LocalPlayer
local gui = player:WaitForChild("PlayerGui")

local function findPlayButton()
    for _, guiObj in ipairs(gui:GetChildren()) do
        if guiObj:IsA("ScreenGui") then
            local btn = guiObj:FindFirstChild("Play", true)
            if btn and btn:IsA("GuiButton") then
                return btn
            end
        end
    end
    return nil
end

local function pressEnter()
    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Return, false, game)
    task.wait(0.05)
    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Return, false, game)
end

while true do
    while not (player.Character and player.Character:FindFirstChild("HumanoidRootPart")) do
        local playButton = findPlayButton()
        if playButton then
            GuiService.SelectedObject = playButton
            task.wait(0.2)
            pressEnter()
        end
        task.wait(5)
    end

    repeat
        task.wait(0.5)
    until not (player.Character and player.Character:FindFirstChild("HumanoidRootPart"))
end

_G.auto = true

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player, mouse = Players.LocalPlayer, Players.LocalPlayer:GetMouse()

-- Lấy tên trái đang trang bị
local function getEquippedFruit()
    local mainData = player:WaitForChild("MAIN_DATA", 10)
    if not mainData then return nil end

    local currentSlot = mainData:FindFirstChild("Slot")
    if not currentSlot then return nil end

    local slotValue = mainData.Slots:FindFirstChild(tostring(currentSlot.Value))
    return slotValue and slotValue.Value or nil
end

-- Tự động gán tên trái đang dùng
local currentFruit = getEquippedFruit()
if not currentFruit then
    warn("Không thể lấy tên trái đang dùng.")
    return
end

-- Danh sách chiêu theo từng trái
local skills = {
    DoughV2 = {"GrilledLance", "ElasticLasso", "Oblivion", "PowerDough", "BlazingStorm", "ScorchingBuzzcut"},
    Ope = {"Room", "Takt", "Wreckage", "HurricaneShock", "GammaKnife", "Mes", "Shambles"},
    LeopardV2 = {"FingerPistolBarrage", "SonicKick", "InfinityDrive", "UnrelentingAssault", "Transform", "HeavensDemise"},
    Lightning = {"VoltageUp", "LightningPalm", "CrashingThunder", "ProjectedBurst", "CrushingJudgment", "Raigo"},
    Nika = {"RocGun", "NeoRedHawk", "RocGatling", "RedRoc", "DrumsOfLiberation", "Gear5", "SpinningTop", "DawnRocket", "MolePistolCombo", "RisingBolt", "GigantStamp", "BajrangGun"},
    DragonV2 = {"InfernoBreath", "ThunderBagua", "DragonTwister", "BeastsBellow", "Transform", "BoloFrenzy", "FlamingTorch", "Demolition", "Transformation"},
    Soul = {"EnthralGrasp", "ScorchingSickle", "ZeusMeadow", "CrimsonPillar", "Transform", "MaserCannon"},
    DarkXQuake = {"AntiQuake", "BlackHolePath", "BlackTurret", "NeoKurouzuCombo", "AntiBody", "QuadraSeaQuake"},
    Okuchi = {"PrimalRage", "ArcticBreath", "DevastatingDrop", "HallowedCuts", "GlacialCoat", "DivineSerpent"},
}

-- Chiêu cần thông số đặc biệt
local special = {
    BlackHolePath = true,
    Room = true,
    Shambles = true,
}

local function castSkill(fruit, skill)
    local char = player.Character or player.CharacterAdded:Wait()
    local hrp = char:WaitForChild("HumanoidRootPart")

    if special[skill] then
        local origin, target = hrp.Position, mouse.Hit.Position
        local dir = (target - origin).Unit * 45
        local ray = {
            Normal = Vector3.yAxis,
            Direction = dir,
            Origin = origin,
            Instance = workspace.Map.Part,
            Distance = (target - origin).Magnitude,
            Material = Enum.Material.Grass,
            Position = target
        }

        ReplicatedStorage.Replicator:InvokeServer(fruit, skill, {Ground = {Position = target}, MouseRay = ray})
        ReplicatedStorage.ReplicatorNoYield:FireServer("ClientData", "UpdateData", {RootCF = hrp.CFrame, MouseRay = ray})
    else
        ReplicatedStorage.ReplicatorNoYield:FireServer(fruit, skill, {})
    end
end

-- Bắt đầu auto
while _G.auto do
    for _, skill in ipairs(skills[currentFruit] or {}) do
        castSkill(currentFruit, skill)
        task.wait(0.15)
    end
end
